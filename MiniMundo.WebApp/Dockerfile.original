# Acesse https://aka.ms/customizecontainer para saber como personalizar seu contêiner de depuração e como o Visual Studio usa este Dockerfile para criar suas imagens para uma depuração mais rápida.

# Etapa base usada durante a execução no Visual Studio no modo rápido (Padrão para a configuração de Depuração)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Etapa para compilar o projeto
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copiar os arquivos de projeto
COPY ["MiniMundo.WebApp/MiniMundo.WebApp.csproj", "MiniMundo.WebApp/"]
COPY ["MiniMundo.DAL/MiniMundo.DAL.csproj", "MiniMundo.DAL/"]

# Restaurar as dependências
RUN dotnet restore "MiniMundo.WebApp/MiniMundo.WebApp.csproj"

# Copiar o restante dos arquivos e construir o projeto
COPY . .
WORKDIR "/src/MiniMundo.WebApp"
RUN dotnet build "MiniMundo.WebApp.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Etapa de publicação do projeto (todos os arquivos, incluindo JSON, serão copiados automaticamente)
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "MiniMundo.WebApp.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Etapa final para produção ou execução normal no Visual Studio
FROM base AS final
WORKDIR /app

# Adicionar o comando para rodar as migrações
RUN dotnet ef database update

# Copiar a publicação da etapa anterior (incluindo os arquivos JSON já publicados na pasta bin)
COPY --from=publish /app/publish .

# Ponto de entrada da aplicação
ENTRYPOINT ["dotnet", "MiniMundo.WebApp.dll"]
